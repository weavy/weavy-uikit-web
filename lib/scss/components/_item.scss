@use "base/var";
@use "base/color";
@use "base/text";

// An individual (list) item with support for icon/img, content and actions.
.wy-item {
  --wy-component-color: #{color.token(--wy-on-background)};
  position: relative;
  display: flex;
  align-items: center;
  gap: var.default(--wy-gap);
  padding: var.default(--wy-padding);
  text-decoration: none;
  min-height: var.wy-rem(3);
}

// Item with room for larger icon and two rows of content
.wy-item-lg {
  padding: var.default(--wy-padding);
  min-height: var.wy-rem(4.5);
  gap: var.default(--wy-gap);
}

.wy-item-body {
  width: 100%;
  min-width: 0;
}

.wy-item-rows {
  display: flex;
  flex-direction: column;
  width: 100%;
  row-gap: var.default(--wy-gap-sm);
  min-width: 0;

  &:only-child {
    margin-inline-start: var.default(--wy-gap-sm);
  }
}

.wy-item-rows-compact {
  row-gap: 0;
}

.wy-item-rows-single {
  margin-inline-start: var.default(--wy-gap-sm);
}

.wy-item-title {
  color: var(--wy-component-color);
  font-size: var.default(--wy-item-title-font-size);
  font-weight: var.default(--wy-item-title-font-weight);
  @include text.truncate;
}

.wy-item-title-lg {
  color: var(--wy-component-color);
  font-size: var.default(--wy-item-title-font-size);
  font-weight: var.default(--wy-item-title-font-weight);
  @include text.truncate-lines(3);
}

.wy-item-text {
  color: color.token(--wy-outline);
  font-size: var.default(--wy-font-size-sm);
  
  @include text.truncate;

  .wy-icon {
    width: var.wy-rem(1.25);
    height: var.wy-rem(1.25);
    vertical-align: var.wy-rem(-0.3125);
  }
}

.wy-item-quote {
  color: color.token(--wy-outline);
  &::before,
  &::after {
    content: '"';
  }
}

// For items with more than one action, and items with top/bottom positioned actions
.wy-item-actions {
  --wy-component-background-color: transparent;
  display: flex;
  align-items: center;
  justify-items: flex-end;
  flex: 0 0 auto;
  margin: var.wy-rem(-0.25);
}

.wy-item-top {
  align-self: flex-start;
}

.wy-item-actions-bottom {
  align-self: flex-start;
  margin-block: var.wy-rem(-0.5);
}

.wy-item-row {
  display: flex;
  align-items: center;
  column-gap: var.default(--wy-gap);

  .wy-item-title {
    margin-right: auto;
  }

  .wy-item-text {
    margin-right: auto;
  }

  .wy-meta {
    white-space: nowrap;
  }
}

.wy-item-right {
  margin-left: auto;
}

// An actionable item with hover, disabled, and active states.
.wy-item-hover {
  //--wy-component-background-color: #{color.token(--wy-surface-1)};
  //--wy-component-color: #{color.token(--wy-on-surface)};
  //background-color: var(--wy-component-background-color);
  //color: var(--wy-component-color);

  user-select: none;
  cursor: pointer;

  // Hover state
  &:hover,
  &:focus {
    --wy-component-background-color: #{color.token(--wy-surface-2)};
    --wy-component-color: #{color.token(--wy-on-surface)};
    background-color: var(--wy-component-background-color);
    color: var(--wy-component-color);
    text-decoration: none;
  }

  &:active {
    --wy-component-background-color: #{color.token(--wy-surface-variant)};
    --wy-component-color: #{color.token(--wy-on-surface-variant)};
    background-color: var(--wy-component-background-color);
    color: var(--wy-component-color);
  }

  &.wy-disabled,
  &:disabled {
    //--wy-component-background-color: #{color.token(--wy-surface-1)};
    //background-color: var(--wy-component-background-color);
    opacity: var.default(--wy-opacity-disabled);
    pointer-events: none;
  }
  // Include both here for `<a>`s and `<button>`s
  &.wy-active {
    --wy-component-background-color: #{color.token(--wy-primary-container)};
    --wy-component-color: #{color.token(--wy-on-primary-container)};
    background-color: var(--wy-component-background-color);
    color: var(--wy-component-color);
    border-color: var(--wy-component-background-color);
  }
}

.wy-item-trashed {
  text-decoration: line-through;
  opacity: var.default(--wy-opacity-disabled);

  &.wy-item-hover:hover {
    opacity: 1;
  }
}
